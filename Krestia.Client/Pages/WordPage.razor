@page "/word/{word}"
@using Krestia.Web.Common
@using System.Net
@inject HttpClient HttpClient
@inject ILogger<WordPage> Logger
<div>
    @if (Error is not null) {
        <p>@Error</p>
    } else if (Result is null) {
        <p>Loading...</p>
    } else {
        <h2 class="vorto">@Result.Spelling</h2>
        <div class="streko"></div>
        <p class="vorttipo">@Result.WordType</p>
        <p>@Result.Meaning</p>
    }
</div>

@code {

    [Parameter]
    public string Word { get; set; } = null!;

    private WordResponse? Result { get; set; }
    private string? Error { get; set; }

    protected override async Task OnParametersSetAsync() {
        try {
            Result = await HttpClient.GetFromJsonAsync<WordResponse>($"/api/word/{Word}");
        } catch (HttpRequestException e) {
            if (e.StatusCode == HttpStatusCode.NotFound) {
                Error = $"Word not found: {Word}";
            } else {
                Error = $"An error occurred while fetching {Word}";
                Logger.LogError(e, null);
            }
        }
    }
}